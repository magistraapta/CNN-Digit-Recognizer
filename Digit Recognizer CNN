{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/muhammadmagistra/digit-recognizer-cnn-98-val-acc?scriptVersionId=183844551\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"db1afd79","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-06-16T16:14:40.339456Z","iopub.status.busy":"2024-06-16T16:14:40.339133Z","iopub.status.idle":"2024-06-16T16:14:41.088622Z","shell.execute_reply":"2024-06-16T16:14:41.08764Z"},"papermill":{"duration":0.758023,"end_time":"2024-06-16T16:14:41.09079","exception":false,"start_time":"2024-06-16T16:14:40.332767","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["/kaggle/input/digit-recognizer/sample_submission.csv\n","/kaggle/input/digit-recognizer/train.csv\n","/kaggle/input/digit-recognizer/test.csv\n"]}],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"code","execution_count":2,"id":"1afee9cb","metadata":{"execution":{"iopub.execute_input":"2024-06-16T16:14:41.101957Z","iopub.status.busy":"2024-06-16T16:14:41.101547Z","iopub.status.idle":"2024-06-16T16:14:52.981622Z","shell.execute_reply":"2024-06-16T16:14:52.980649Z"},"papermill":{"duration":11.888087,"end_time":"2024-06-16T16:14:52.98402","exception":false,"start_time":"2024-06-16T16:14:41.095933","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["2024-06-16 16:14:42.915804: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n","2024-06-16 16:14:42.915941: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n","2024-06-16 16:14:43.053399: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"]}],"source":["import tensorflow as tf\n","import matplotlib.pyplot as plt"]},{"cell_type":"markdown","id":"3199d0f3","metadata":{"papermill":{"duration":0.004845,"end_time":"2024-06-16T16:14:52.993976","exception":false,"start_time":"2024-06-16T16:14:52.989131","status":"completed"},"tags":[]},"source":["# Load Dataset"]},{"cell_type":"code","execution_count":3,"id":"508c29e4","metadata":{"execution":{"iopub.execute_input":"2024-06-16T16:14:53.005101Z","iopub.status.busy":"2024-06-16T16:14:53.004515Z","iopub.status.idle":"2024-06-16T16:14:58.572176Z","shell.execute_reply":"2024-06-16T16:14:58.571378Z"},"papermill":{"duration":5.57581,"end_time":"2024-06-16T16:14:58.574549","exception":false,"start_time":"2024-06-16T16:14:52.998739","status":"completed"},"tags":[]},"outputs":[],"source":["# Load train data\n","train_data = pd.read_csv('/kaggle/input/digit-recognizer/train.csv')\n","\n","# Splitting into features and target\n","X = train_data.drop('label', axis=1)\n","y = train_data['label']\n","\n","# Reshape data for CNN\n","X = X.values.reshape(-1, 28, 28, 1)\n","\n","# Normalize pixel values\n","X = X.astype('float32') / 255.0\n","\n","# Load test data\n","test_data = pd.read_csv('/kaggle/input/digit-recognizer/test.csv')\n","test_data = test_data.values.reshape(-1, 28, 28, 1)\n","test_data = test_data.astype('float32') / 255.0"]},{"cell_type":"markdown","id":"40fd85c2","metadata":{"papermill":{"duration":0.004771,"end_time":"2024-06-16T16:14:58.584464","exception":false,"start_time":"2024-06-16T16:14:58.579693","status":"completed"},"tags":[]},"source":["# Split Dataset"]},{"cell_type":"code","execution_count":4,"id":"a130d512","metadata":{"execution":{"iopub.execute_input":"2024-06-16T16:14:58.596074Z","iopub.status.busy":"2024-06-16T16:14:58.595746Z","iopub.status.idle":"2024-06-16T16:14:59.907316Z","shell.execute_reply":"2024-06-16T16:14:59.906499Z"},"papermill":{"duration":1.319856,"end_time":"2024-06-16T16:14:59.909611","exception":false,"start_time":"2024-06-16T16:14:58.589755","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)"]},{"cell_type":"markdown","id":"8d3d6360","metadata":{"papermill":{"duration":0.004682,"end_time":"2024-06-16T16:14:59.91946","exception":false,"start_time":"2024-06-16T16:14:59.914778","status":"completed"},"tags":[]},"source":["# Define Model"]},{"cell_type":"code","execution_count":5,"id":"ab0d4982","metadata":{"execution":{"iopub.execute_input":"2024-06-16T16:14:59.930079Z","iopub.status.busy":"2024-06-16T16:14:59.929812Z","iopub.status.idle":"2024-06-16T16:15:00.64082Z","shell.execute_reply":"2024-06-16T16:15:00.639947Z"},"papermill":{"duration":0.718578,"end_time":"2024-06-16T16:15:00.642788","exception":false,"start_time":"2024-06-16T16:14:59.92421","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/opt/conda/lib/python3.10/site-packages/keras/src/layers/convolutional/base_conv.py:99: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(\n"]},{"data":{"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n","</pre>\n"],"text/plain":["\u001b[1mModel: \"sequential\"\u001b[0m\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ conv2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">26</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">26</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">16</span>)     │           <span style=\"color: #00af00; text-decoration-color: #00af00\">160</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ max_pooling2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">13</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">13</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">16</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ conv2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">11</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">11</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)     │         <span style=\"color: #00af00; text-decoration-color: #00af00\">4,640</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ max_pooling2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)       │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ flatten (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">800</span>)            │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)            │       <span style=\"color: #00af00; text-decoration-color: #00af00\">410,112</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>)             │         <span style=\"color: #00af00; text-decoration-color: #00af00\">5,130</span> │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n","</pre>\n"],"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ conv2d (\u001b[38;5;33mConv2D\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m26\u001b[0m, \u001b[38;5;34m26\u001b[0m, \u001b[38;5;34m16\u001b[0m)     │           \u001b[38;5;34m160\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ max_pooling2d (\u001b[38;5;33mMaxPooling2D\u001b[0m)    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m13\u001b[0m, \u001b[38;5;34m13\u001b[0m, \u001b[38;5;34m16\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ conv2d_1 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m11\u001b[0m, \u001b[38;5;34m11\u001b[0m, \u001b[38;5;34m32\u001b[0m)     │         \u001b[38;5;34m4,640\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ max_pooling2d_1 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m5\u001b[0m, \u001b[38;5;34m5\u001b[0m, \u001b[38;5;34m32\u001b[0m)       │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ flatten (\u001b[38;5;33mFlatten\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m800\u001b[0m)            │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m512\u001b[0m)            │       \u001b[38;5;34m410,112\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m)             │         \u001b[38;5;34m5,130\u001b[0m │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">420,042</span> (1.60 MB)\n","</pre>\n"],"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m420,042\u001b[0m (1.60 MB)\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">420,042</span> (1.60 MB)\n","</pre>\n"],"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m420,042\u001b[0m (1.60 MB)\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"],"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"]},"metadata":{},"output_type":"display_data"}],"source":["model = tf.keras.Sequential([\n","    tf.keras.layers.Conv2D(16, (3,3), activation='relu', input_shape=(28,28,1)),\n","    tf.keras.layers.MaxPooling2D(2,2),\n","    tf.keras.layers.Conv2D(32, (3,3), activation='relu'),\n","    tf.keras.layers.MaxPooling2D(2,2),\n","    tf.keras.layers.Flatten(),\n","    tf.keras.layers.Dense(512, activation='relu'),\n","    tf.keras.layers.Dense(10, activation='softmax')\n","])\n","\n","model.summary()"]},{"cell_type":"code","execution_count":6,"id":"763acb76","metadata":{"execution":{"iopub.execute_input":"2024-06-16T16:15:00.655916Z","iopub.status.busy":"2024-06-16T16:15:00.655602Z","iopub.status.idle":"2024-06-16T16:15:00.667787Z","shell.execute_reply":"2024-06-16T16:15:00.667053Z"},"papermill":{"duration":0.021242,"end_time":"2024-06-16T16:15:00.669967","exception":false,"start_time":"2024-06-16T16:15:00.648725","status":"completed"},"tags":[]},"outputs":[],"source":["model.compile(loss='sparse_categorical_crossentropy',\n","              optimizer='adam',\n","              metrics=['accuracy']\n","             )"]},{"cell_type":"markdown","id":"f7f6cedd","metadata":{"papermill":{"duration":0.005404,"end_time":"2024-06-16T16:15:00.681077","exception":false,"start_time":"2024-06-16T16:15:00.675673","status":"completed"},"tags":[]},"source":["# Data Augmentation"]},{"cell_type":"code","execution_count":7,"id":"781f1a77","metadata":{"execution":{"iopub.execute_input":"2024-06-16T16:15:00.693389Z","iopub.status.busy":"2024-06-16T16:15:00.693122Z","iopub.status.idle":"2024-06-16T16:15:00.744595Z","shell.execute_reply":"2024-06-16T16:15:00.743645Z"},"papermill":{"duration":0.060238,"end_time":"2024-06-16T16:15:00.746915","exception":false,"start_time":"2024-06-16T16:15:00.686677","status":"completed"},"tags":[]},"outputs":[],"source":["from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","\n","train_datagen = ImageDataGenerator(\n","    rotation_range=10,\n","    zoom_range=0.1,\n","    width_shift_range=0.1,\n","    height_shift_range=0.1\n",")\n","validation_datagen = ImageDataGenerator()\n","\n","train_generator = train_datagen.fit(X_train)\n","\n","validation_generator = validation_datagen.fit(X_val)\n"]},{"cell_type":"markdown","id":"b550415b","metadata":{"papermill":{"duration":0.005583,"end_time":"2024-06-16T16:15:00.758427","exception":false,"start_time":"2024-06-16T16:15:00.752844","status":"completed"},"tags":[]},"source":["# Training the model"]},{"cell_type":"code","execution_count":8,"id":"ddcb13ae","metadata":{"execution":{"iopub.execute_input":"2024-06-16T16:15:00.771823Z","iopub.status.busy":"2024-06-16T16:15:00.770814Z","iopub.status.idle":"2024-06-16T16:16:49.922463Z","shell.execute_reply":"2024-06-16T16:16:49.921626Z"},"papermill":{"duration":109.160295,"end_time":"2024-06-16T16:16:49.924486","exception":false,"start_time":"2024-06-16T16:15:00.764191","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/10\n"]},{"name":"stderr","output_type":"stream","text":["/opt/conda/lib/python3.10/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:120: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n","  self._warn_if_super_not_called()\n","2024-06-16 16:15:03.317077: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 0: 1.72417, expected 1.24375\n","2024-06-16 16:15:03.317128: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 1: 1.75364, expected 1.27322\n","2024-06-16 16:15:03.317138: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 2: 2.24359, expected 1.76317\n","2024-06-16 16:15:03.317145: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 3: 2.39122, expected 1.91081\n","2024-06-16 16:15:03.317153: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 4: 1.92485, expected 1.44444\n","2024-06-16 16:15:03.317160: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 5: 2.48974, expected 2.00933\n","2024-06-16 16:15:03.317168: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 6: 2.26792, expected 1.78751\n","2024-06-16 16:15:03.317175: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 7: 2.82083, expected 2.34041\n","2024-06-16 16:15:03.317182: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 8: 2.41094, expected 1.93053\n","2024-06-16 16:15:03.317190: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 9: 1.94327, expected 1.46286\n","2024-06-16 16:15:03.317841: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:705] Results mismatch between different convolution algorithms. This is likely a bug/unexpected loss of precision in cudnn.\n","(f32[128,16,26,26]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,1,28,28]{3,2,1,0}, f32[16,1,3,3]{3,2,1,0}, f32[16]{0}), window={size=3x3}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0} for eng20{k2=2,k4=1,k5=1,k6=0,k7=0} vs eng15{k5=1,k6=0,k7=1,k10=1}\n","2024-06-16 16:15:03.317873: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:270] Device: Tesla P100-PCIE-16GB\n","2024-06-16 16:15:03.317887: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:271] Platform: Compute Capability 6.0\n","2024-06-16 16:15:03.317899: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:272] Driver: 12020 (535.129.3)\n","2024-06-16 16:15:03.317910: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:273] Runtime: <undefined>\n","2024-06-16 16:15:03.317925: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:280] cudnn version: 8.9.0\n","2024-06-16 16:15:03.442221: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 0: 1.72417, expected 1.24375\n","2024-06-16 16:15:03.442275: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 1: 1.75364, expected 1.27322\n","2024-06-16 16:15:03.442284: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 2: 2.24359, expected 1.76317\n","2024-06-16 16:15:03.442292: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 3: 2.39122, expected 1.91081\n","2024-06-16 16:15:03.442300: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 4: 1.92485, expected 1.44444\n","2024-06-16 16:15:03.442308: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 5: 2.48974, expected 2.00933\n","2024-06-16 16:15:03.442341: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 6: 2.26792, expected 1.78751\n","2024-06-16 16:15:03.442350: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 7: 2.82083, expected 2.34041\n","2024-06-16 16:15:03.442358: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 8: 2.41094, expected 1.93053\n","2024-06-16 16:15:03.442367: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 9: 1.94327, expected 1.46286\n","2024-06-16 16:15:03.442384: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:705] Results mismatch between different convolution algorithms. This is likely a bug/unexpected loss of precision in cudnn.\n","(f32[128,16,26,26]{3,2,1,0}, u8[0]{0}) custom-call(f32[128,1,28,28]{3,2,1,0}, f32[16,1,3,3]{3,2,1,0}, f32[16]{0}), window={size=3x3}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0} for eng20{k2=2,k4=1,k5=1,k6=0,k7=0} vs eng15{k5=1,k6=0,k7=1,k10=1}\n","2024-06-16 16:15:03.442393: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:270] Device: Tesla P100-PCIE-16GB\n","2024-06-16 16:15:03.442401: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:271] Platform: Compute Capability 6.0\n","2024-06-16 16:15:03.442408: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:272] Driver: 12020 (535.129.3)\n","2024-06-16 16:15:03.442416: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:273] Runtime: <undefined>\n","2024-06-16 16:15:03.442428: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:280] cudnn version: 8.9.0\n"]},{"name":"stdout","output_type":"stream","text":["\u001b[1m  6/263\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m8s\u001b[0m 32ms/step - accuracy: 0.2026 - loss: 2.2309"]},{"name":"stderr","output_type":"stream","text":["WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n","I0000 00:00:1718554505.083433      66 device_compiler.h:186] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n"]},{"name":"stdout","output_type":"stream","text":["\u001b[1m 56/263\u001b[0m \u001b[32m━━━━\u001b[0m\u001b[37m━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m7s\u001b[0m 36ms/step - accuracy: 0.4676 - loss: 1.6498"]},{"name":"stderr","output_type":"stream","text":["2024-06-16 16:15:07.269053: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 676: 2.0483, expected 1.26858\n","2024-06-16 16:15:07.269109: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 677: 2.20101, expected 1.42128\n","2024-06-16 16:15:07.269119: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 678: 2.65492, expected 1.87519\n","2024-06-16 16:15:07.269128: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 679: 2.20349, expected 1.42377\n","2024-06-16 16:15:07.269136: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 680: 2.49058, expected 1.71085\n","2024-06-16 16:15:07.269143: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 681: 2.5955, expected 1.81578\n","2024-06-16 16:15:07.269151: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 682: 2.15522, expected 1.3755\n","2024-06-16 16:15:07.269158: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 683: 2.67709, expected 1.89736\n","2024-06-16 16:15:07.269165: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 684: 2.06732, expected 1.28759\n","2024-06-16 16:15:07.269173: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 685: 1.88249, expected 1.10276\n","2024-06-16 16:15:07.269186: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:705] Results mismatch between different convolution algorithms. This is likely a bug/unexpected loss of precision in cudnn.\n","(f32[64,16,26,26]{3,2,1,0}, u8[0]{0}) custom-call(f32[64,1,28,28]{3,2,1,0}, f32[16,1,3,3]{3,2,1,0}, f32[16]{0}), window={size=3x3}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0} for eng20{k2=2,k4=1,k5=1,k6=0,k7=0} vs eng15{k5=1,k6=0,k7=1,k10=1}\n","2024-06-16 16:15:07.269194: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:270] Device: Tesla P100-PCIE-16GB\n","2024-06-16 16:15:07.269201: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:271] Platform: Compute Capability 6.0\n","2024-06-16 16:15:07.269208: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:272] Driver: 12020 (535.129.3)\n","2024-06-16 16:15:07.269219: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:273] Runtime: <undefined>\n","2024-06-16 16:15:07.269233: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:280] cudnn version: 8.9.0\n","2024-06-16 16:15:07.300708: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 676: 2.0483, expected 1.26858\n","2024-06-16 16:15:07.300744: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 677: 2.20101, expected 1.42128\n","2024-06-16 16:15:07.300753: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 678: 2.65492, expected 1.87519\n","2024-06-16 16:15:07.300760: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 679: 2.20349, expected 1.42377\n","2024-06-16 16:15:07.300768: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 680: 2.49058, expected 1.71085\n","2024-06-16 16:15:07.300776: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 681: 2.5955, expected 1.81578\n","2024-06-16 16:15:07.300784: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 682: 2.15522, expected 1.3755\n","2024-06-16 16:15:07.300791: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 683: 2.67709, expected 1.89736\n","2024-06-16 16:15:07.300799: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 684: 2.06732, expected 1.28759\n","2024-06-16 16:15:07.300808: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 685: 1.88249, expected 1.10276\n","2024-06-16 16:15:07.300825: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:705] Results mismatch between different convolution algorithms. This is likely a bug/unexpected loss of precision in cudnn.\n","(f32[64,16,26,26]{3,2,1,0}, u8[0]{0}) custom-call(f32[64,1,28,28]{3,2,1,0}, f32[16,1,3,3]{3,2,1,0}, f32[16]{0}), window={size=3x3}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0} for eng20{k2=2,k4=1,k5=1,k6=0,k7=0} vs eng15{k5=1,k6=0,k7=1,k10=1}\n","2024-06-16 16:15:07.300836: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:270] Device: Tesla P100-PCIE-16GB\n","2024-06-16 16:15:07.300849: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:271] Platform: Compute Capability 6.0\n","2024-06-16 16:15:07.300864: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:272] Driver: 12020 (535.129.3)\n","2024-06-16 16:15:07.300876: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:273] Runtime: <undefined>\n","2024-06-16 16:15:07.300892: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:280] cudnn version: 8.9.0\n"]},{"name":"stdout","output_type":"stream","text":["\u001b[1m256/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 42ms/step - accuracy: 0.6857 - loss: 0.9847"]},{"name":"stderr","output_type":"stream","text":["2024-06-16 16:15:16.689699: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 677: 2.07377, expected 1.74299\n","2024-06-16 16:15:16.689761: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 703: 1.31377, expected 0.982978\n","2024-06-16 16:15:16.689779: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 704: 1.98129, expected 1.6505\n","2024-06-16 16:15:16.689800: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 705: 2.16458, expected 1.83379\n","2024-06-16 16:15:16.689813: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 729: 2.15064, expected 1.81986\n","2024-06-16 16:15:16.689826: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 733: 2.24772, expected 1.91693\n","2024-06-16 16:15:16.689839: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 750: 1.81989, expected 1.4891\n","2024-06-16 16:15:16.689850: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 752: 1.9511, expected 1.62031\n","2024-06-16 16:15:16.689863: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 759: 2.00098, expected 1.6702\n","2024-06-16 16:15:16.689876: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 776: 2.29747, expected 1.96668\n","2024-06-16 16:15:16.689896: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:705] Results mismatch between different convolution algorithms. This is likely a bug/unexpected loss of precision in cudnn.\n","(f32[80,16,26,26]{3,2,1,0}, u8[0]{0}) custom-call(f32[80,1,28,28]{3,2,1,0}, f32[16,1,3,3]{3,2,1,0}, f32[16]{0}), window={size=3x3}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0} for eng20{k2=2,k4=1,k5=1,k6=0,k7=0} vs eng15{k5=1,k6=0,k7=1,k10=1}\n","2024-06-16 16:15:16.689910: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:270] Device: Tesla P100-PCIE-16GB\n","2024-06-16 16:15:16.689923: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:271] Platform: Compute Capability 6.0\n","2024-06-16 16:15:16.689934: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:272] Driver: 12020 (535.129.3)\n","2024-06-16 16:15:16.689947: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:273] Runtime: <undefined>\n","2024-06-16 16:15:16.689964: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:280] cudnn version: 8.9.0\n","2024-06-16 16:15:16.722984: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 677: 2.07377, expected 1.74299\n","2024-06-16 16:15:16.723037: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 703: 1.31377, expected 0.982978\n","2024-06-16 16:15:16.723057: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 704: 1.98129, expected 1.6505\n","2024-06-16 16:15:16.723073: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 705: 2.16458, expected 1.83379\n","2024-06-16 16:15:16.723085: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 729: 2.15064, expected 1.81986\n","2024-06-16 16:15:16.723097: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 733: 2.24772, expected 1.91693\n","2024-06-16 16:15:16.723109: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 750: 1.81989, expected 1.4891\n","2024-06-16 16:15:16.723123: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 752: 1.9511, expected 1.62031\n","2024-06-16 16:15:16.723139: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 759: 2.00098, expected 1.6702\n","2024-06-16 16:15:16.723154: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 776: 2.29747, expected 1.96668\n","2024-06-16 16:15:16.723183: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:705] Results mismatch between different convolution algorithms. This is likely a bug/unexpected loss of precision in cudnn.\n","(f32[80,16,26,26]{3,2,1,0}, u8[0]{0}) custom-call(f32[80,1,28,28]{3,2,1,0}, f32[16,1,3,3]{3,2,1,0}, f32[16]{0}), window={size=3x3}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0} for eng20{k2=2,k4=1,k5=1,k6=0,k7=0} vs eng15{k5=1,k6=0,k7=1,k10=1}\n","2024-06-16 16:15:16.723204: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:270] Device: Tesla P100-PCIE-16GB\n","2024-06-16 16:15:16.723218: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:271] Platform: Compute Capability 6.0\n","2024-06-16 16:15:16.723230: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:272] Driver: 12020 (535.129.3)\n","2024-06-16 16:15:16.723242: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:273] Runtime: <undefined>\n","2024-06-16 16:15:16.723260: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:280] cudnn version: 8.9.0\n"]},{"name":"stdout","output_type":"stream","text":["\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m16s\u001b[0m 46ms/step - accuracy: 0.6900 - loss: 0.9716 - val_accuracy: 0.9601 - val_loss: 0.1305\n","Epoch 2/10\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 38ms/step - accuracy: 0.9434 - loss: 0.1869 - val_accuracy: 0.9726 - val_loss: 0.0891\n","Epoch 3/10\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 38ms/step - accuracy: 0.9567 - loss: 0.1447 - val_accuracy: 0.9768 - val_loss: 0.0730\n","Epoch 4/10\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 39ms/step - accuracy: 0.9678 - loss: 0.1068 - val_accuracy: 0.9862 - val_loss: 0.0448\n","Epoch 5/10\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 39ms/step - accuracy: 0.9679 - loss: 0.1034 - val_accuracy: 0.9835 - val_loss: 0.0516\n","Epoch 6/10\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 38ms/step - accuracy: 0.9747 - loss: 0.0842 - val_accuracy: 0.9845 - val_loss: 0.0468\n","Epoch 7/10\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 37ms/step - accuracy: 0.9726 - loss: 0.0860 - val_accuracy: 0.9868 - val_loss: 0.0449\n","Epoch 8/10\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 38ms/step - accuracy: 0.9788 - loss: 0.0676 - val_accuracy: 0.9844 - val_loss: 0.0490\n","Epoch 9/10\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 38ms/step - accuracy: 0.9804 - loss: 0.0632 - val_accuracy: 0.9864 - val_loss: 0.0426\n","Epoch 10/10\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 38ms/step - accuracy: 0.9812 - loss: 0.0619 - val_accuracy: 0.9888 - val_loss: 0.0398\n"]}],"source":["history = model.fit(train_datagen.flow(X_train, y_train, batch_size=128),\n","                    epochs=10,\n","                    validation_data=validation_datagen.flow(X_val, y_val, batch_size=128),\n","                    verbose=1\n","                    )"]},{"cell_type":"markdown","id":"f361ee36","metadata":{"papermill":{"duration":0.109684,"end_time":"2024-06-16T16:16:50.143063","exception":false,"start_time":"2024-06-16T16:16:50.033379","status":"completed"},"tags":[]},"source":["# Visualization"]},{"cell_type":"code","execution_count":9,"id":"0b83df3d","metadata":{"execution":{"iopub.execute_input":"2024-06-16T16:16:50.40914Z","iopub.status.busy":"2024-06-16T16:16:50.408482Z","iopub.status.idle":"2024-06-16T16:16:50.724875Z","shell.execute_reply":"2024-06-16T16:16:50.723954Z"},"papermill":{"duration":0.472849,"end_time":"2024-06-16T16:16:50.726821","exception":false,"start_time":"2024-06-16T16:16:50.253972","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.plot(history.history['accuracy'], label='Training Accuracy')\n","plt.plot(history.history['val_accuracy'], label='Validation Accuracy')\n","plt.xlabel('Epoch')\n","plt.ylabel('Accuracy')\n","plt.title('Training and Validation Accuracy')\n","plt.legend()\n","plt.show()"]},{"cell_type":"code","execution_count":10,"id":"3da3f634","metadata":{"execution":{"iopub.execute_input":"2024-06-16T16:16:50.950645Z","iopub.status.busy":"2024-06-16T16:16:50.950262Z","iopub.status.idle":"2024-06-16T16:16:53.212461Z","shell.execute_reply":"2024-06-16T16:16:53.211649Z"},"papermill":{"duration":2.37634,"end_time":"2024-06-16T16:16:53.214717","exception":false,"start_time":"2024-06-16T16:16:50.838377","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["2024-06-16 16:16:51.341903: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 1: 1.23455, expected 1.00508\n","2024-06-16 16:16:51.341962: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 2: 1.23285, expected 1.00338\n","2024-06-16 16:16:51.341978: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 26: 1.20628, expected 0.976813\n","2024-06-16 16:16:51.341997: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 27: 1.05634, expected 0.826866\n","2024-06-16 16:16:51.342012: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 53: 1.18824, expected 0.95877\n","2024-06-16 16:16:51.342023: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 98: 1.12336, expected 0.893891\n","2024-06-16 16:16:51.342035: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 109: 1.05594, expected 0.82647\n","2024-06-16 16:16:51.342046: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 142: 0.956427, expected 0.726958\n","2024-06-16 16:16:51.342057: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 167: 1.16142, expected 0.931956\n","2024-06-16 16:16:51.342069: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 196: 1.28941, expected 1.05994\n","2024-06-16 16:16:51.342090: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:705] Results mismatch between different convolution algorithms. This is likely a bug/unexpected loss of precision in cudnn.\n","(f32[32,16,26,26]{3,2,1,0}, u8[0]{0}) custom-call(f32[32,1,28,28]{3,2,1,0}, f32[16,1,3,3]{3,2,1,0}, f32[16]{0}), window={size=3x3}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0} for eng20{k2=2,k4=1,k5=1,k6=0,k7=0} vs eng15{k5=1,k6=0,k7=1,k10=1}\n","2024-06-16 16:16:51.342102: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:270] Device: Tesla P100-PCIE-16GB\n","2024-06-16 16:16:51.342115: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:271] Platform: Compute Capability 6.0\n","2024-06-16 16:16:51.342143: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:272] Driver: 12020 (535.129.3)\n","2024-06-16 16:16:51.342156: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:273] Runtime: <undefined>\n","2024-06-16 16:16:51.342173: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:280] cudnn version: 8.9.0\n","2024-06-16 16:16:51.373599: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 1: 1.23455, expected 1.00508\n","2024-06-16 16:16:51.373636: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 2: 1.23285, expected 1.00338\n","2024-06-16 16:16:51.373652: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 26: 1.20628, expected 0.976813\n","2024-06-16 16:16:51.373667: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 27: 1.05634, expected 0.826866\n","2024-06-16 16:16:51.373679: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 53: 1.18824, expected 0.95877\n","2024-06-16 16:16:51.373691: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 98: 1.12336, expected 0.893891\n","2024-06-16 16:16:51.373705: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 109: 1.05594, expected 0.82647\n","2024-06-16 16:16:51.373725: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 142: 0.956427, expected 0.726958\n","2024-06-16 16:16:51.373739: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 167: 1.16142, expected 0.931956\n","2024-06-16 16:16:51.373753: E external/local_xla/xla/service/gpu/buffer_comparator.cc:1137] Difference at 196: 1.28941, expected 1.05994\n","2024-06-16 16:16:51.373777: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:705] Results mismatch between different convolution algorithms. This is likely a bug/unexpected loss of precision in cudnn.\n","(f32[32,16,26,26]{3,2,1,0}, u8[0]{0}) custom-call(f32[32,1,28,28]{3,2,1,0}, f32[16,1,3,3]{3,2,1,0}, f32[16]{0}), window={size=3x3}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBiasActivationForward\", backend_config={\"conv_result_scale\":1,\"activation_mode\":\"kRelu\",\"side_input_scale\":0,\"leakyrelu_alpha\":0} for eng20{k2=2,k4=1,k5=1,k6=0,k7=0} vs eng15{k5=1,k6=0,k7=1,k10=1}\n","2024-06-16 16:16:51.373797: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:270] Device: Tesla P100-PCIE-16GB\n","2024-06-16 16:16:51.373815: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:271] Platform: Compute Capability 6.0\n","2024-06-16 16:16:51.373827: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:272] Driver: 12020 (535.129.3)\n","2024-06-16 16:16:51.373839: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:273] Runtime: <undefined>\n","2024-06-16 16:16:51.373856: E external/local_xla/xla/service/gpu/conv_algorithm_picker.cc:280] cudnn version: 8.9.0\n"]},{"name":"stdout","output_type":"stream","text":["\u001b[1m875/875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 1ms/step\n"]}],"source":["test_data_reshaped= test_data.reshape((-1,28,28,1))\n","predictions= model.predict(test_data_reshaped, verbose=1)"]},{"cell_type":"code","execution_count":11,"id":"efa86193","metadata":{"execution":{"iopub.execute_input":"2024-06-16T16:16:53.444157Z","iopub.status.busy":"2024-06-16T16:16:53.443307Z","iopub.status.idle":"2024-06-16T16:16:53.483751Z","shell.execute_reply":"2024-06-16T16:16:53.482955Z"},"papermill":{"duration":0.156934,"end_time":"2024-06-16T16:16:53.485742","exception":false,"start_time":"2024-06-16T16:16:53.328808","status":"completed"},"tags":[]},"outputs":[],"source":["predicted_classes= np.argmax(predictions, axis=1)\n","results= pd.Series(predicted_classes, name=\"Label\")\n","submission= pd.concat([pd.Series(range(1,28001), name=\"ImageId\"), results], axis=1)\n","submission.to_csv(\"submission.csv\", index=False)"]}],"metadata":{"kaggle":{"accelerator":"gpu","dataSources":[{"databundleVersionId":861823,"sourceId":3004,"sourceType":"competition"}],"dockerImageVersionId":30699,"isGpuEnabled":true,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":138.298474,"end_time":"2024-06-16T16:16:55.817706","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-06-16T16:14:37.519232","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}